{
  "version": 3,
  "sources": ["../../helpers/database.ts"],
  "sourcesContent": ["import {Sequelize, QueryTypes} from 'sequelize';\n//import {config} from '../config';\n\nconst config = {\n host: 'tiny.db.elephantsql.com',\n port: 5432,\n user:'apzvtefj',\n password: 'NyiReeL2m-RoO-J_LUFDhneQR-ZnrZEb',\n database: 'apzvtefj',\n connection_limit: 100\n}\n\nexport const run_query = async (query: any, values: any) => {\n   try {\n     const sequelize = new Sequelize(`postgres://${config.user}:${config.password}@${config.host}:${config.port}/${config.database}`);\n     await sequelize.authenticate();\n     let data = await sequelize.query(query, {\n       replacements: values,\n       type: QueryTypes.SELECT});\n     await sequelize.close();\n     return data;\n  } catch (err: any) {\n    console.error(err, query, values);\n    throw 'Database query error';\n  }\n}\n\nexport const run_insert = async function run_insert(sql: string, values: any) {\n try { \n   const sequelize = new Sequelize(`postgres://${ config.user}:${config.password}@${config.host}:${config.port}/${ config.database}`);\n   await sequelize.authenticate();\n   let data = await sequelize.query(sql, {\n     replacements: values,\n     type: QueryTypes.INSERT\n     });\n   await sequelize.close();\n   return data;\n  } catch (err: any) {\n    console.error(err, sql, values);\n    throw 'Database query error';\n  }\n}\n\nexport const run_update = async function run_update(sql: string, values: any) {\n    try {\n        const sequelize = new Sequelize(`postgres://${ config.user}:${config.password}@${config.host}:${config.port}/${ config.database}`);\n        await sequelize.authenticate();\n        let data = await sequelize.query(sql, {\n        replacements: values,\n        type: QueryTypes.UPDATE\n    });\n        await sequelize.close();\n        return data;\n    } catch (err: any) {\n        console.error(err, sql,values);\n        throw 'Database query error';\n    }\n}\n\nexport const run_delete = async function run_delete(sql: string, values: any) {\n    try {\n        const sequelize = new Sequelize(`postgres://${ config.user}:${config.password}@${config.host}:${config.port}/${ config.database}`);\n        await sequelize.authenticate();\n        let data = await sequelize.query(sql, {\n        replacements: values,\n        type: QueryTypes.DELETE\n    });\n        await sequelize.close();\n        return data;\n    } catch (err: any) {\n        console.error(err, sql,values);\n        throw 'Database query error';\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAoC;AAGpC,MAAM,SAAS;AAAA,EACd,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAK;AAAA,EACL,UAAU;AAAA,EACV,UAAU;AAAA,EACV,kBAAkB;AACnB;AAEO,MAAM,YAAY,OAAO,OAAY,WAAgB;AACzD,MAAI;AACF,UAAM,YAAY,IAAI,2BAAU,cAAc,OAAO,QAAQ,OAAO,YAAY,OAAO,QAAQ,OAAO,QAAQ,OAAO,UAAU;AAC/H,UAAM,UAAU,aAAa;AAC7B,QAAI,OAAO,MAAM,UAAU,MAAM,OAAO;AAAA,MACtC,cAAc;AAAA,MACd,MAAM,4BAAW;AAAA,IAAM,CAAC;AAC1B,UAAM,UAAU,MAAM;AACtB,WAAO;AAAA,EACV,SAAS,KAAP;AACA,YAAQ,MAAM,KAAK,OAAO,MAAM;AAChC,UAAM;AAAA,EACR;AACF;AAEO,MAAM,aAAa,eAAeA,YAAW,KAAa,QAAa;AAC7E,MAAI;AACF,UAAM,YAAY,IAAI,2BAAU,cAAe,OAAO,QAAQ,OAAO,YAAY,OAAO,QAAQ,OAAO,QAAS,OAAO,UAAU;AACjI,UAAM,UAAU,aAAa;AAC7B,QAAI,OAAO,MAAM,UAAU,MAAM,KAAK;AAAA,MACpC,cAAc;AAAA,MACd,MAAM,4BAAW;AAAA,IACjB,CAAC;AACH,UAAM,UAAU,MAAM;AACtB,WAAO;AAAA,EACR,SAAS,KAAP;AACA,YAAQ,MAAM,KAAK,KAAK,MAAM;AAC9B,UAAM;AAAA,EACR;AACF;AAEO,MAAM,aAAa,eAAeC,YAAW,KAAa,QAAa;AAC1E,MAAI;AACA,UAAM,YAAY,IAAI,2BAAU,cAAe,OAAO,QAAQ,OAAO,YAAY,OAAO,QAAQ,OAAO,QAAS,OAAO,UAAU;AACjI,UAAM,UAAU,aAAa;AAC7B,QAAI,OAAO,MAAM,UAAU,MAAM,KAAK;AAAA,MACtC,cAAc;AAAA,MACd,MAAM,4BAAW;AAAA,IACrB,CAAC;AACG,UAAM,UAAU,MAAM;AACtB,WAAO;AAAA,EACX,SAAS,KAAP;AACE,YAAQ,MAAM,KAAK,KAAI,MAAM;AAC7B,UAAM;AAAA,EACV;AACJ;AAEO,MAAM,aAAa,eAAeC,YAAW,KAAa,QAAa;AAC1E,MAAI;AACA,UAAM,YAAY,IAAI,2BAAU,cAAe,OAAO,QAAQ,OAAO,YAAY,OAAO,QAAQ,OAAO,QAAS,OAAO,UAAU;AACjI,UAAM,UAAU,aAAa;AAC7B,QAAI,OAAO,MAAM,UAAU,MAAM,KAAK;AAAA,MACtC,cAAc;AAAA,MACd,MAAM,4BAAW;AAAA,IACrB,CAAC;AACG,UAAM,UAAU,MAAM;AACtB,WAAO;AAAA,EACX,SAAS,KAAP;AACE,YAAQ,MAAM,KAAK,KAAI,MAAM;AAC7B,UAAM;AAAA,EACV;AACJ;",
  "names": ["run_insert", "run_update", "run_delete"]
}
